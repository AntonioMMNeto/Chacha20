--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=32 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 18.1 cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 32 
SUBDESIGN mux_gob
( 
	data[63..0]	:	input;
	result[31..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[31..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data1011w[1..0]	: WIRE;
	w_data1023w[1..0]	: WIRE;
	w_data1035w[1..0]	: WIRE;
	w_data1047w[1..0]	: WIRE;
	w_data1059w[1..0]	: WIRE;
	w_data1071w[1..0]	: WIRE;
	w_data1083w[1..0]	: WIRE;
	w_data1095w[1..0]	: WIRE;
	w_data1107w[1..0]	: WIRE;
	w_data1119w[1..0]	: WIRE;
	w_data1131w[1..0]	: WIRE;
	w_data1143w[1..0]	: WIRE;
	w_data1155w[1..0]	: WIRE;
	w_data1167w[1..0]	: WIRE;
	w_data1179w[1..0]	: WIRE;
	w_data1191w[1..0]	: WIRE;
	w_data1203w[1..0]	: WIRE;
	w_data1215w[1..0]	: WIRE;
	w_data1227w[1..0]	: WIRE;
	w_data1239w[1..0]	: WIRE;
	w_data1251w[1..0]	: WIRE;
	w_data1263w[1..0]	: WIRE;
	w_data1275w[1..0]	: WIRE;
	w_data1287w[1..0]	: WIRE;
	w_data1299w[1..0]	: WIRE;
	w_data1311w[1..0]	: WIRE;
	w_data1323w[1..0]	: WIRE;
	w_data1335w[1..0]	: WIRE;
	w_data1347w[1..0]	: WIRE;
	w_data1359w[1..0]	: WIRE;
	w_data1371w[1..0]	: WIRE;
	w_data997w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data1371w[1..1]) # ((! sel_node[]) & w_data1371w[0..0])), ((sel_node[] & w_data1359w[1..1]) # ((! sel_node[]) & w_data1359w[0..0])), ((sel_node[] & w_data1347w[1..1]) # ((! sel_node[]) & w_data1347w[0..0])), ((sel_node[] & w_data1335w[1..1]) # ((! sel_node[]) & w_data1335w[0..0])), ((sel_node[] & w_data1323w[1..1]) # ((! sel_node[]) & w_data1323w[0..0])), ((sel_node[] & w_data1311w[1..1]) # ((! sel_node[]) & w_data1311w[0..0])), ((sel_node[] & w_data1299w[1..1]) # ((! sel_node[]) & w_data1299w[0..0])), ((sel_node[] & w_data1287w[1..1]) # ((! sel_node[]) & w_data1287w[0..0])), ((sel_node[] & w_data1275w[1..1]) # ((! sel_node[]) & w_data1275w[0..0])), ((sel_node[] & w_data1263w[1..1]) # ((! sel_node[]) & w_data1263w[0..0])), ((sel_node[] & w_data1251w[1..1]) # ((! sel_node[]) & w_data1251w[0..0])), ((sel_node[] & w_data1239w[1..1]) # ((! sel_node[]) & w_data1239w[0..0])), ((sel_node[] & w_data1227w[1..1]) # ((! sel_node[]) & w_data1227w[0..0])), ((sel_node[] & w_data1215w[1..1]) # ((! sel_node[]) & w_data1215w[0..0])), ((sel_node[] & w_data1203w[1..1]) # ((! sel_node[]) & w_data1203w[0..0])), ((sel_node[] & w_data1191w[1..1]) # ((! sel_node[]) & w_data1191w[0..0])), ((sel_node[] & w_data1179w[1..1]) # ((! sel_node[]) & w_data1179w[0..0])), ((sel_node[] & w_data1167w[1..1]) # ((! sel_node[]) & w_data1167w[0..0])), ((sel_node[] & w_data1155w[1..1]) # ((! sel_node[]) & w_data1155w[0..0])), ((sel_node[] & w_data1143w[1..1]) # ((! sel_node[]) & w_data1143w[0..0])), ((sel_node[] & w_data1131w[1..1]) # ((! sel_node[]) & w_data1131w[0..0])), ((sel_node[] & w_data1119w[1..1]) # ((! sel_node[]) & w_data1119w[0..0])), ((sel_node[] & w_data1107w[1..1]) # ((! sel_node[]) & w_data1107w[0..0])), ((sel_node[] & w_data1095w[1..1]) # ((! sel_node[]) & w_data1095w[0..0])), ((sel_node[] & w_data1083w[1..1]) # ((! sel_node[]) & w_data1083w[0..0])), ((sel_node[] & w_data1071w[1..1]) # ((! sel_node[]) & w_data1071w[0..0])), ((sel_node[] & w_data1059w[1..1]) # ((! sel_node[]) & w_data1059w[0..0])), ((sel_node[] & w_data1047w[1..1]) # ((! sel_node[]) & w_data1047w[0..0])), ((sel_node[] & w_data1035w[1..1]) # ((! sel_node[]) & w_data1035w[0..0])), ((sel_node[] & w_data1023w[1..1]) # ((! sel_node[]) & w_data1023w[0..0])), ((sel_node[] & w_data1011w[1..1]) # ((! sel_node[]) & w_data1011w[0..0])), ((sel_node[] & w_data997w[1..1]) # ((! sel_node[]) & w_data997w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data1011w[] = ( data[33..33], data[1..1]);
	w_data1023w[] = ( data[34..34], data[2..2]);
	w_data1035w[] = ( data[35..35], data[3..3]);
	w_data1047w[] = ( data[36..36], data[4..4]);
	w_data1059w[] = ( data[37..37], data[5..5]);
	w_data1071w[] = ( data[38..38], data[6..6]);
	w_data1083w[] = ( data[39..39], data[7..7]);
	w_data1095w[] = ( data[40..40], data[8..8]);
	w_data1107w[] = ( data[41..41], data[9..9]);
	w_data1119w[] = ( data[42..42], data[10..10]);
	w_data1131w[] = ( data[43..43], data[11..11]);
	w_data1143w[] = ( data[44..44], data[12..12]);
	w_data1155w[] = ( data[45..45], data[13..13]);
	w_data1167w[] = ( data[46..46], data[14..14]);
	w_data1179w[] = ( data[47..47], data[15..15]);
	w_data1191w[] = ( data[48..48], data[16..16]);
	w_data1203w[] = ( data[49..49], data[17..17]);
	w_data1215w[] = ( data[50..50], data[18..18]);
	w_data1227w[] = ( data[51..51], data[19..19]);
	w_data1239w[] = ( data[52..52], data[20..20]);
	w_data1251w[] = ( data[53..53], data[21..21]);
	w_data1263w[] = ( data[54..54], data[22..22]);
	w_data1275w[] = ( data[55..55], data[23..23]);
	w_data1287w[] = ( data[56..56], data[24..24]);
	w_data1299w[] = ( data[57..57], data[25..25]);
	w_data1311w[] = ( data[58..58], data[26..26]);
	w_data1323w[] = ( data[59..59], data[27..27]);
	w_data1335w[] = ( data[60..60], data[28..28]);
	w_data1347w[] = ( data[61..61], data[29..29]);
	w_data1359w[] = ( data[62..62], data[30..30]);
	w_data1371w[] = ( data[63..63], data[31..31]);
	w_data997w[] = ( data[32..32], data[0..0]);
END;
--VALID FILE
